{"version":3,"sources":["app/application.coffee","app/controllers/game_controller.coffee","app/initialize.coffee","app/lib/event_broker.coffee","app/lib/mediator.coffee","app/lib/utils.coffee","app/models/collection.coffee","app/models/model.coffee","app/models/player.coffee","app/models/snow_drawer.coffee","app/views/avatar.coffee","app/views/drawing_canvas.coffee","app/views/map_view.coffee","app/views/templates/avatar.jade","app/views/templates/map.jade","app/views/view.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,GAAiB,WAAjB,eAAiB;;AACjB,CADA,EACiB,KAAjB,MAAiB;;AAGjB,CAJA,EAKE,QADF;CACE,EAAY,OAAZ;CACE,EAAsB,CAAtB;CAGO,EAAP,GAAM;CAJR,EAAY;CALd;;AAWA,CAXA,EAWiB,GAAX,CAAN,IAXA;;;;ACAA;;AAAA,GAAgB,IAAhB,SAAgB;;AAChB,CADA,EACgB,KAAhB,MAAgB;;AAChB,CAFA,EAEgB,QAAhB,OAAgB;;AAChB,CAHA,EAGgB,GAAhB,CAAgB;;AAChB,CAJA,EAIgB,GAAhB,CAAgB;;AAChB,CALA,EAKgB,UAAhB,SAAgB;;AAChB,CANA,EAMgB,OAAhB,UAAgB;;AAChB,CAPA,EAOgB,EAAhB,EAAgB;;AAEhB,CATA,EASuB,GAAjB,CAAN;CACE,IAAc,CAAd,EAAQ,CAAR,KAAuB;;CACV;CACX;CAAA,GACA;CADA,GAEA;CAJF,EACa;;CADb,EAMU,KAAV,CAAU;CACP,EAAc,CAAd,GAAD;CACE,CAAW,GAAX;CAAA,CACA,GAAI,CAAJ,EAAY,MAAR;CADJ,CAEY,EAFZ,EAEA;CAJM,KACO;CAPjB,EAMU;;CANV,EAYa,QAAb;CACG,EAAa,CAAb,EAAD,OAAc;CACZ,OAAY,IAAR;CAAJ,CACY,EADZ,EACA;CAHS,KACG;CAbhB,EAYa;;CAZb,EAiBW,MAAX;CACE;CAAA,EAAa,CAAb;CACE;CAAA,CACM,EAAN;CADA,CAEY,CAFZ,GAEA;CAFA,CAGY,CAHZ,GAGA;CAJF,KAAa;CAAb,EAKa,CAAb;CACE,CAAO,GAAP;CANF,KAKa;CALb,EAQwB,CAAxB,EAAM,IAAN;CACE,CAAQ,IAAR;CAAA,CACQ,IAAR;CADA,CAEQ,EAAC,EAAT;CAXF,KAQwB;CARxB,CAa0B,EAA1B,GAAQ,CAAR;CAEC,CAA4B,EAA5B,EAAD,CAAQ,IAAR;CAjCF,EAiBW;;CAjBX;;CAVF;;;;ACAA;;AAAA,GAAc,QAAd,EAAc;;AAEd,CAFA,CAE8C,MAAtC,CAAsC,OAA9C;CACc,QAAZ,EAAW;CADiC;;;;ACA9C;CAAA;GAAA;;AAEA,CAFA,EAEW,KAAX,MAAW;;AAcX,CAhBA,EAiBE,QADF;CACE,EAAgB,MAAC,KAAjB;AACK,CAAH,IAAoB,CAAjB,EAAH;CACE,EACE,CADQ,0BAAU,EAAV;KADZ;AAGG,CAAH,IAAuB,CAApB,IAAH;CACE,EACE,CADQ,0BAAU,OAAV;KAJZ;CAAA,CAQ2B,EAA3B,IAAQ,GAAR;CAGS,CAAgB,EAAzB,IAAQ,CAAR;CAZF,EAAgB;CAAhB,CAcA,CAAoB,MAAC,SAArB;AACK,CAAH,IAAoB,CAAjB,EAAH;CACE,EACE,CADQ,8BAAU;KADtB;AAGG,CAAH,IAAuB,CAApB,IAAH;CACE,EACE,CADQ,8BAAU,GAAV;KAJZ;CAAA,CAQ2B,EAA3B,IAAQ,GAAR;CAGS,CAAoB,EAA7B,IAAQ,GAAR;CA1BF,EAcoB;CAdpB,CA4BA,CAAkB,MAAC,OAAnB;AACK,CAAH,IAAoB,CAAjB,EAAH;CACE,EACE,CADQ,4BAAU;KADtB;AAGG,CAAH,IAAuB,CAApB,IAAH;CACE,EACE,CADQ,4BAAU,KAAV;KAJZ;CAQS,CAAkB,EAA3B,IAAQ,GAAR;CArCF,EA4BkB;CA5BlB,CAwCA,CAAsB,iBAAtB;CAEW,CAAkB,EAA3B,IAAQ,GAAR;CA1CF,EAwCsB;CAxCtB,CA4CA,CAAc,SAAd;CACE;CAAA,CADmB,EAAN,mDACb;AAAG,CAAH,IAAoB,CAAjB,EAAH;CACE,EACE,CADQ,wBAAU,IAAV;KADZ;CAKS,GAAc,GAAvB,CAAQ,CAAe,EAAvB,EAAuB,IAAN;CAlDnB,EA4Cc;CA7DhB;;;CAsEO,CAAP,IAAM;CAtEN;;AAyEA,CAzEA,EAyEiB,GAAX,CAAN,IAzEA;;;;ACFA;CAAA;GAAA;;AAkBA,CAlBA,EAkBW,KAAX;;AAOA,CAzBA,CAyByB,IAAkC,EAAnD,CAAR;;AACA,CA1BA,EA0ByB,GAAkC,EAAnD,KAAR;;AACA,CA3BA,EA2ByB,GAAkC,EAAnD,GAAR;;AACA,CA5BA,EA4ByB,GAAkC,CAA3D,CAAQ;;AAGR,CA/BA,EA+BsB,CA/BtB,IA+BQ,EAAR;;AAOA,CAtCA,EAsCW,KAAX,CAAW;;AAGX,CAzCA,CAyC6B,CAAP,KAAd,CAAe,CAAvB;CACW,EAAQ,CAAR,KAAT;CAAiB,CAAC,MAAD;CAAA,CAAW,IAAX;CADG;CAAA;;AAItB,CA7CA,EA6CmB,IAAnB,CAAQ,CAAW;CACjB;CAAA,CADkB,qDAClB;CAAA,EAAS,EAAT;AACG,CAAH,GAAG,CAAoB,CAApB,EAAH,CAAG;CACD,EAAS,CAAT,KAAkB;CAAlB,EACO,CAAP,KAAgB;IAFlB;CAIE,EAAO,CAAP;GALF;CAAA,CAMA,CAAU,CAAS,GAAnB,CAAmB;CACnB,GAAG,GAAH;CACU,CAA+B,EAAvC,EAAc,CAAP,CAAP;AACU,CAAJ,GAFR;CAGE,EAAoC,CAA1B,gBAAO,KAAP;GAXK;CAAA;;AAenB,CA5DA,EA4D0B,KAAlB,CAAmB,KAA3B,CAA0B;CACxB;AAAO,CAAP;CACE,EAAqB,CAArB,IAAQ,CAAR;GADF;CAGA,GAAG,CAAK,EAAL;AACD;iCAAA;AACE,IAAgB,EAAhB,EAAgB;CADlB,IADF;IAAA;AAIE;+BAAA;CAA2C,GAAR,CAAoB,EAAb,CAAP;AACjC,IAAgB,EAAhB;OADF;CAAA,IAJF;GAJwB;CAAA;;AAiB1B,CA7EA,EA6EgB,CAAhB,IAAQ,CAAQ;CAEd,GAAG,EAAsC,CAA/B,YAAP;CACM,GAAP,EAAM,EAAN;GAHY;CAAA;;AAShB,CAtFA,EAsFiB,GAAX,CAAN,CAtFA;;;;ACAA;GAAA;;AAAA,GAEE,EAFF;CAEE,EAAwB,MAAC,aAAzB;CACE;CAAA,EAAS,CAAT;CACA;CAAA;uBAAA;CACE,EAAQ,EAAR,GAAc;CACd,CAAa,EAAV,EAAH,SAA0B;CACxB,KAAM,EAAN;OAHJ;CAAA,IADA;CADsB,UAMtB;CANF,EAAwB;CAAxB,CASA,CAAW,MAAX;AACK,CAAH,IAA4B,CAAzB,IAAH;CACO,GAAD,KAAJ;AACM,KAAsB,CAF9B;CAGO,GAAD,EAAJ;MAHF;CAKE,GAAU;KANH;CATX,EASW;CATX,CAkBA,CAAmB,MAAC,QAApB;CACE;CAAA,EAAQ,CAAR,EAAe,GAAP,EAAmB;CAC3B,IAA6E,CAAvE;CACJ,IAAK,CAAL;CAFF,IACA;CAEM,IAAD,EAAL;CAtBF,EAkBmB;CApBrB;;AA0BA,CA1BA,EA0BiB,EA1BjB,CA0BM,CAAN;;;;ACzBA;;AAAA,GAAuB,GAAjB,CAAN;CAAiB;;CAAA;;CAAjB;;;;ACDA;GAAA;kSAAA;;AAAA,GAAc,QAAd,OAAc;;AAGd,CAHA,EAGuB,GAAjB,CAAN;CACE;;;;;CAAA;;CAAA,IAAc,CAAd,EAAQ,CAAR;;CAAA;;CADmC,OAAQ;;;;ACH7C;GAAA;kSAAA;;AAAA,GAAQ,EAAR,EAAQ;;AAER,CAFA,EAEuB,GAAjB,CAAN;CACE;;;;;CAAA;;CAAA,EACE,KADF;CACE,CAAY,EAAZ;CAAA,CACY,EAAZ;CAFF;;CAAA,EAIU,KAAV,CAAU;CACR,CAAO,CAAE,CAAC,EAAH,MAAE;CALX,EAIU;;CAJV;;CADoC;;;;ACFtC;GAAA;kSAAA;;AAAA,GAAQ,EAAR,EAAQ;;AAER,CAFA,EAEuB,GAAjB,CAAN;CACE;;;;;CAAA;;CAAA,EAAY,MAAC,CAAb;CACE;CAAA,EACU,CAAV,GAAiB;CADjB,EAEU,CAAV,GAAiB;CAFjB,EAGU,CAAV,GAAiB;CAChB,CAAyB,EAAzB,EAAM,EAAP;CALF,EAAY;;CAAZ;;CADwC;;;;ACF1C;GAAA;kSAAA;;AAAA,GAAO,CAAP,GAAO;;AAEP,CAFA,EAEQ,CAAR;;AACA,CAHA,CAGA,CAAQ;;AACR,CAJA,EAIQ,EAAR;;AACA,CALA,EAKQ,CAAR;;AAEA,CAPA,EAQE,aADF;CACE;CAAA,CACA;CADA,CAEA;CAFA,CAGA;CAXF;;AAaA,CAbA,EAcE,aADF;CACE;CAAA,CACA,EADA;CAAA,CAEA,KAFA;CAAA,CAGA,IAHA;CAdF;;AAmBA,CAnBA,EAmBuB,GAAjB,CAAN;CACE;;;;;CAAA;;CAAA,EAAU,KAAV,YAAU;;CAAV,EACY,EADZ,KACA;;CADA,EAEW,KAFX,CAEA;;CAFA,EAGa,QAAb;;CAHA,EAIiB,YAAjB;;CAJA,EAKQ,EALR,CAKA;;CALA,EAMoB,eAApB;;CANA,CAOqB,CAAP,SAAd;;CAPA,EASE,gBADF;CACE,CAAM,EAAN;CAAA,CACO,EAAP;CADA,CAEA;CAFA,CAGM,EAAN;CAZF;;CAAA,EAcY,OAAZ;CACE;CACC,CAAiB,EAAjB,CAAD;CAhBF,EAcY;;CAdZ,EAkBQ,GAAR,GAAQ;CACN;CAAA,GACA;CADA,GAEA;CACC,UAAD;CAtBF,EAkBQ;;CAlBR,EAwBY,OAAZ;CACE;CAAA,CAAqC,EAArC,IAAQ,CAAR;CACE,GAAqB,CAAC,CAAtB,OAAqB;CAApB,YAAD;OADmC;CAArC,IAAqC;CAE5B,CAA0B,KAAnC,CAAQ,CAA4B,EAApC;CACG,WAAD;CADF,IAAmC;CA3BrC,EAwBY;;CAxBZ,EA8Be,MAAC,IAAhB;CACG,CAAsB,EAAtB,EAAD;CA/BF,EA8Be;;CA9Bf,EAiCe,MAAC,IAAhB;CACE;CAAA;CAEA,EAAkE,CAAlE,GAAyB,MAAtB,KAAyC;CAC1C,GAAC,EAAD,YAAmB;AAEnB;CACE,GAAC,IAAD;CACC,EAAe,CAAf,KAA2B,EAAZ,CAAhB;CACG,GAAD,CAAC,YAAD;CADc,CAEd,EAAC,KAFyB,MAAZ;OALpB;KAHa;CAjCf,EAiCe;;CAjCf,EA8CM,CAAN,KAAO;CAEL,EAAU,CAAV;CAAA,GAEA;AACI,CAAJ,CAAI,EAAJ,CAGG,YAHC;CAIA,EAAU,CAAT,CAAD;CAAA,GACC,EAAD;KARJ;CAWA,CAAG,EAAH,aAAG;AACoD,CAArD,CAAyB,CAAzB,CAAC,CAAK,CAAN;KAZF;CAaA,gBAAG;CACD,CAAyB,CAAzB,CAAC,CAAK,CAAN;KAdF;CAeA,gBAAG;AACoD,CAArD,CAAyB,CAAzB,CAAC,CAAK,CAAN;KAhBF;CAiBA,IAAG;CACD,CAAyB,CAAzB,CAAC,CAAK,CAAN;KAlBF;CAAA,GAoBA;CAEC,UAAD;CAtEF,EA8CM;;CA9CN,EAwEe,UAAf;CACE,EAAc,CAAd,CAAoB,KAApB,EAAc;CAAd,EACc,CAAd,CAAoB,KAApB,EAAc;CACb,CAAE,CAA0B,CAA5B,CAAQ,GAAiC,GAA1C,GAA6B,CAA7B;CA3EF,EAwEe;;CAxEf,EA6Ec,MAAC,GAAf;CACE;AAC+C,CAA7C,EAA4C,CAAzC,EAAH,CAAG,WAAmB;CACpB,GAAC,GAAD;OADF;CAGA,GAAG,CAA8B,CAAjC,YAAsB;CACpB,GAAC,IAAD;CAAA,EACU,CAAT,CADD,CACA;OALF;CAOA,GAAoD,EAApD;CAAA,CAAG,EAAF,EAAD,CAAsC,CAAtC,CAAa,OAAyB;OARxC;MAAA;CAUE,GAAC,EAAD;CAAA,EACsB,CAArB,EAAD;CADA,EAEU,CAAT,CAFD,CAEA;KAZF;CAcC,UAAD;CA5FF,EA6Ec;;CA7Ed,EA8Fe,MAAC,IAAhB;AAC6C,CAA3C,EAA0C,CAAlC,GAAD,KAAa;CA/FtB,EA8Fe;;CA9Ff,EAiGmB,MAAC,QAApB;AAC0C,CAAvC,EAAsC,CAAtC,GAAD,WAAmB;CAlGrB,EAiGmB;;CAjGnB,EAoGoB,eAApB;CACE;CAAA,CAAe,CAAH,CAAZ;CACA;CACE,QAAS;MADX;CAGE,QAAS;KAJX;CAMA,CAAG,EAAH,aAAG;CACD,QAAS;CAAT,KACA,GAAS;KARX;CASA,gBAAG;CACD,QAAS;CAAT,GACA,KAAS;KAXX;CAYA,gBAAG;CACD,QAAS;CAAT,KACA,GAAS;KAdX;CAeA,IAAG;CACD,QAAS;CACC,KAAV,GAAS,IAAT;KAlBgB;CApGpB,EAoGoB;;CApGpB,EAwHsB,iBAAtB;CACE;CAAA,CAAe,CAAH,CAAZ;CAAA,GACA,KAAS;CADT,GAEA,KAAS;CAFT,GAGA,KAAS;CACC,KAAV,GAAS,EAAT;CA7HF,EAwHsB;;CAxHtB,EA+HkB,aAAlB;CACE;CACC,EAAe,CAAf,OAAD;CAjIF,EA+HkB;;CA/HlB,EAmIuB,MAAC,YAAxB;CACG,CAAgE,EAAhE,EAAD,CAA2B,IAA3B,OAAmB;CApIrB,EAmIuB;;CAnIvB,EAsIe,UAAf;CACE;CAAW,SAAX;CACE;CAAA,CAAiB,CAAH,EAAC,CAAf,QAAc;CAAd,EACS,CADT,CACC,CAAD,KAAoB;CACnB,EAAS,EAAT,CAAD,KAAqB,EAArB;CAHF,CAIE,GAJS;CAvIb,EAsIe;;CAtIf,EA6IgB,WAAhB;CACE;AAA4C,CAA5C,CAAgB,EAAhB,aAAgB,EAAgD;AAClB,CAD9C,EACgB,CAAhB,aAAgB,EAAkD;AACpB,CAF9C,EAEgB,CAAhB,aAAgB,EAAkD;AACnB,CAH/C,EAGgB,CAAhB,CAAgB,QAAhB,IAAgB,EAAmD;CAEnE;CAAA,GAAC,EAAD;KALA;CAMA;CAAA,GAAC,EAAD;KANA;CAOA;CAAA,GAAC,EAAD;KAPA;CAQA;CAAC,IAAD;KATc;CA7IhB,EA6IgB;;CA7IhB;;CADoC;;;;ACnBtC;GAAA;kSAAA;;AAAA,GAAO,CAAP,GAAO;;AAEP,CAFA,EAEuB,GAAjB,CAAN;CACE;;;;;CAAA;;CAAA,EAAO,EAAP;;CAAA,EACY,OAAZ;CACE;CACC,EAAQ,CAAR,CAAD;CAHF,EACY;;CADZ,EAKQ,GAAR,GAAQ;CACN;CAAA,CACU,CAAV,OAAO;CADP,EAEI,CAAJ,SAFA;CAAA,EAGI,CAAJ;CAHA,EAII,CAAJ;CAJA,EAKI,CAAJ,GALA,CAKA;CAEC,EAAQ,CAAR,CAAD;CAbF,EAKQ;;CALR,CAee,CAAT,CAAN,EAAM,GAAC;CAGL;CAAA,EAAI,CAAJ,EAAU,MAAN;CAAJ,EACI,CAAJ,EAAU,MAAN;CADJ,GAEA,CAAM;CACJ,CAAG,IAAH;CAAA,CACG,IAAH;CAJF,KAEA;CAIC,IAAD;CAxBF,EAeM;;CAfN,EA0Bc,SAAd;CACE;CAAA,EAAI,CAAJ;CAAA,CACyB,CAArB,CAAJ,CAAmB,CAAnB;CADA,EAEI,CAAJ;CACA;CAAA;sBAAA;CACE,CAAoB,CAAhB,CAAH,EAAD;CADF,IAHA;CAKC,EAAG,CAAH,EAAD;CAhCF,EA0Bc;;CA1Bd,EAkCS,IAAT,EAAU;CACP,EAAQ,CAAR,CAAD;CAnCF,EAkCS;;CAlCT;;CAD2C;;;;ACF7C;GAAA;kSAAA;;AAAA,GAAO,CAAP,GAAO;;AACP,CADA,EACW,KAAX,SAAW;;AAEX,CAHA,EAGuB,GAAjB,CAAN;CACE;;;;;CAAA;;CAAA,EAAU,KAAV;;CAAA,EACW,EADX,IACA;;CADA,EAEkB,aAAlB;;CAFA,EAGU,KAAV;;CAHA,EAIU,KAAV;;CAJA,EAKQ,CALR,EAKA;;CALA,EAMO,CANP,CAMA;;CANA,EAQQ,GAAR,GAAQ;CACN;CACC,UAAD;CAVF,EAQQ;;CARR,EAYe,UAAf;CACE,EAAQ,CAAR,IAAgB,MAAR;CACP,EACC,CADD,IAAD;CACE,CAAQ,CAAa,CAArB;CAAA,CACQ,CAAR,CAAS,EAAT,UADA;CAAA,CAEQ,CAAc,CAAb,CAAT,WAFA;CAAA,CAGQ,CAAe,CAAd,EAAT,UAHA;CAHW;CAZf,EAYe;;CAZf,CAoBsB,CAAT,MAAC,EAAd;CACE,EAAmB,CAAnB,EAAM,GAAN;CACO,KAAD,KAAN;CAtBF,EAoBa;;CApBb,CAwB8B,CAAT,MAAC,UAAtB;CACE;CAAA,EAAK,CAAL,EAAW,MAAN;CAAL,CACA,CAAK,CAAL,EAAW,MAAN;CAEL,CAAG,EAAH,EAAG;CACD,EAAmB,EAAnB;KAJF;CAAA,CAMW,EAAX,CANA,GAMA;CANA,CAOW,EAAX,EAPA,EAOA;CAPA,EAQc,CAAd,IAAc,GAAd;CARA,CAUY,EAAZ,CAAmB,CAAqC,EAA5B,CAA5B;CAVA,CAWY,EAAZ;CAXA,CAYY,EAAZ,EAAmB,EAAnB;CAZA,CAaY,EAAZ,IAA2B;CAb3B,EAeQ,CAAR,IAfA;CAAA,EAgBQ,CAAR,IAhBA;CAkBA;CACE,CAAqB,CAAb,CAAC,CAAT,GAA+B;KAnBjC;CAoBA;CACE,CAAqB,CAAb,CAAC,CAAT,GAAgC;KArBlC;CAsBA;CACE,CAAoB,CAAZ,CAAC,CAAT,GAA8B;KAvBhC;CAwBA;CACE,CAAoB,CAAZ,CAAC,CAAT,GAA+B;KAzBjC;AA4BA,GAAgB,CAAhB,CAAQ,GAAD;CACL,EAAY,CAAX,CAAD;KA7BF;AA8BA,GAAgB,CAAhB,CAAQ,GAAD;CACL,EAAY,CAAX,CAAD;KA/BF;CAiCC,CAAyB,EAAzB,IAAD;CA1DF,EAwBqB;;CAxBrB,CA6DsB,CAAP,MAAC,IAAhB;CACG,CAAE,CAA0B,CAA5B,CAAQ,CAAoB,KAA7B,GAA6B,CAA7B;CA9DF,EA6De;;CA7Df,CAgEc,CAAH,MAAX;CACE;CAAA,EAAY,CAAZ;CAAA,EACY,CAAZ;CADA,EAEY,CAAZ;CAFA,EAGY,CAAZ,CAHA,GAGA;CAHA,EAME,CADF,EAAM,aAAN;CACE,CAAO,GAAP;CAAA,CACM,EAAN,IADA;CAAA,CAEA;CAFA,CAGM,EAAN,IAHA;CANF;CAWA,GAAoB,EAAb;CA5ET,EAgEW;;CAhEX;;CADqC;;;CCHvC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;;ACAA;GAAA;;wJAAA;;AAAA,GAAc,EAAd,EAAc;;AACd,CADA,EACc,QAAd,OAAc;;AAGd,CAJA,EAII,KAAQ;;AAGZ,CAPA,EAOU,CAAV,KAAU;CACR,GAAG,IAAQ,CAAE;EACJ,CAAP,MAAC,EAAD;CAAoB,EAAL,CAAI,SAAJ;CADjB,IACE;CACO,GAFT;CAGG,UAAD;GAJM;CAAA;;AAMV,CAbA,EAaa,IAAb,EAAa;CACX,GAAG;EACM,CAAP,MAAC,EAAD;CAAqB,GAAD,SAAJ;CADlB,IACE;IADF;EAGS,CAAP,MAAC,EAAD;CAAqB,EAAY,CAAb,KAAJ;CAHlB,IAGE;GAJS;CAAA;;AAMb,CAnBA,EAmBY,GAAZ,GAAY;CACV,GAAG;GACD,MAAC,EAAD;CACE;CAAA,EAAS,CAAM,EAAf,GAAS;AACN,CAAH,GAAG,CAA+B,CAAlC,SAAG;CACI,CAAwB,EAAzB,EAAJ;MADF;CAGS,CAAP,EAAW,EAAJ,SAAP;OALJ;CADF,IACE;IADF;GAQE,MAAC,EAAD;CACE;AAAY,CAAZ,EAAY,CAAW,CAAc,CAArC,EAAS,CAAG,IACV;AAIC,CAAH,GAAG,CAA+B,CAAlC,SAAG;CACI,CAAwB,EAAzB,EAAJ;MADF;CAGS,CAAP,EAAW,EAAJ,SAAP;OATJ;CARF,IAQE;GATQ;CAAA;;AAoBZ,CAvCA,EAuCuB,GAAjB,CAAN;CAEE;;CAAA,GAAuB,CAAT,CAAd,EAAQ,CAAR;;CAAA,EAOY,EAPZ,KAOA;;CAPA,EAUY,CAVZ,MAUA;;CAVA,EAqBW,CArBX,KAqBA;;CArBA,EAyBoB,KAAH,KAzBjB,EAyBA;;CAzBA,EAqCS,CArCT,GAqCA;;CArCA,EA4CQ,CA5CR,EA4CA;;CA5CA,EAgDO,EAAP;;CAhDA,EAoDQ,EApDR,CAoDA;;CApDA,EAuDa,EAvDb,MAuDA;;CAvDA,EA6DU,CA7DV,IA6DA;;CA7DA,EA8DgB,CA9DhB,UA8DA;;CA9DA,CAsEgB,CADH,QAAb,CAAa;;CAOA,aAAC;CAEZ;OAAA;CAAA;AACE;oCAAA;CAAkD,CAAZ,aAAW;CAC/C,EAAgB,CAAX,IAAL;SADF;CAAA,MADF;KAAA;CAAA,EAMS,CAAT;CANA,EAQU,CAAV,KAAU;CAER,GAAgB,CAAC,CAAjB;CAAA,cAAO;OAAP;CAAA,CAEmB,GAAnB;CAEA,GAAwB,CAAC,CAAzB;CAAA,IAAC,CAAD,QAAQ;OAJR;CAFQ,YAQR;CAhBF,IAQU;CARV,EAmBY,CAAZ;CAnBA,EAoBkB,CAAlB;CAEA;CACE,GAAG,EAAH;CACE,CAAyC,CAAhC,CAAiC,EAA1C,CAAS,CAAT,KAAS;CAET,GAAG,IAAH;CACE,EACK,CADJ,EAGa,EAAS,CAAjB,CAHN,oBAEI,GADF;SALN;OAAA;CAaA,GAAoB,EAApB;CAAA,EAAM,CAAL,IAAD;OAdF;KAtBA;CAAA,GAuCA;CAvCA,GA2CA;CAIA;CAAA,CAAkB,EAAjB,CAAD;KA/CA;CAgDA;CACE,CAAuB,CAAW,CAAjC,EAAD,CAAkC,CAAlC;AACoB,CAAlB,GAAc,CAA0B,EAA1B,CAAd;CAAC,MAAD;SADgC;CAAlC,MAAkC;KAjDpC;CAqDA;CAAA,CAAoC,EAApC,IAAQ,SAAR;KArDA;CAwDA;CAAA,GAAC,EAAD;KA1DW;CA5Eb,EA4Ea;;CA5Eb,CAqJsB,CAAZ,KAAV,CAAW;CACT;CAAA,OAAW;CACT,CAAqC,EAA9B,CAAc,CAAd,EAAQ,CAAR;KADT;AAEG,CAAH,IAAyB,CAAtB,EAAH,CAAG;CACD,GAAU;KAHZ;CAKA,IAAuB,CAApB,GAAS;CACV,EAAU,GAAV;CACgB,GAAV,CAAoB,CAF5B,GAEiB;CACf,EAAW,GAAX;AACG,CAAH,GAAG,CAAqB,CAAxB,EAAG;CACD,EACE,CADQ,aAAU,iBAAV;OAFZ;CAAA,EAIU,EAJV,CAIA;MAPF;CASE,EACE,CADQ,aAAU,wBAAV;KAdZ;AAiBG,CAAH,IAAuB,CAApB,IAAH;CACE,EACE,CADQ,aAAU,kBAAV;KAlBZ;CAAA,GAsBA;;CAAQ;CAAA;YAAA;yBAAA;CAAA,EAAE,CAAkB,CAApB;CAAA;;CAtBR;CAAA,EAuBS,CAAT;CAvBA,CAwBsB,CAAd,CAAR,GAAQ;CAxBR,CAyBA,CAAI,CAAJ,IAAiB;CA1BT,UA6BR;CAlLF,EAqJU;;CArJV,EAqLiB,MAAC,MAAlB;CACE;CAAA,IAA2C,CAAxC,EAAQ,CAAO,KAAc;CAC9B,CAAgD,EAA5B,EAAb,EAAQ,CAAO,IAAf,CAA6B;KADtC;AAEA;0BAAA;AACe,CAAb,EAAa,CAAgD,CAAhD,CAAb,IAAU;AACgD,CAA1D;CAAA,EAA0B,CAAhB,MAAO,IAAP;OADV;CAAA,EAEQ,EAAR,WAAQ;CAFR,CAGY,EAA6B,CAArB,CAApB,WAAY;CAHZ,EAIW,EAAM,CAAjB;CAJA,CAKsB,CAAd,EAAR,EAAQ;CALR,CAMA,CAAI,CAAH,CAAD,GAAoB,CAApB;CAPF,IAHe;CArLjB,EAqLiB;;CArLjB,CAoMyB,CAAT,MAAC,KAAjB;CACE;AAA2B,CAA3B;CAAA,GAAC,EAAD;KAAA;CACA;CAAA,GAAQ,EAAD;KADP;CAGA;CAAA;6BAAA;AACyC,CAAvC,GAAuC,CAAsB,CAA7D,KAAuC;CAAvC,EAAc,KAAd;OAAA;CAAA,GACC,EAAD;CAFF,IAJc;CApMhB,EAoMgB;;CApMhB,CA8MwB,CAAZ,MAAC,CAAb;CACE;CAAA,OAAW;CACT,CAAuC,EAAhC,CAAc,CAAd,EAAQ,CAAR;KADT;CAEA;AACK,CAAH,GAAG,CAAsB,CAAzB,GAAG;CACD,GAAU;OADZ;CAGA,GAAG,CAAoB,CAAvB,GAAY;AACP,CAAH,GAAG,CAAiB,CAAjB,EAAH;CACE,EAAW,GAAX;MADF;CAGE,EAAU,GAAV;SAJJ;CAKkB,GAAV,CAAoB,CAL5B,GAKiB;CACf,EAAW,GAAX;AACG,CAAH,GAAG,CAAqB,CAArB,EAAH;CACE,EACE,CADQ,eAAU,eAAV;SAFZ;CAAA,EAIU,EAJV,EAIA;OAbF;CAAA,GAeA;;CAAQ;CAAA;cAAA;2BAAA;CAAA,EAAE,CAAkB,CAApB;CAAA;;CAfR;CAAA,EAgBS,CAAI,EAAb;CACC,CAAiB,CAAd,CAAH,EAAD,EAAkB,KAAlB;MAlBF;CAoBG,EAAG,CAAH,OAAS,EAAV;KAvBQ;CA9MZ,EA8MY;;CA9MZ,EAwOmB,cAAnB;CACE;AAAc,CAAd;CAAA;KAAA;CAGA;CAAA;yBAAA;AACiC,CAA/B,GAA+B,CAAkB,CAAjD,CAA+B,GAA/B;CAAA,EAAU,IAAV;OAAA;AACA;8BAAA;AAEK,CAAH,GAAG,CAAmB,CAAnB,EAAH;CACE,EAAS,CAAK,EAAd;SADF;AAEG,CAAH,GAAG,CAAmB,CAAnB,EAAH;CACE,EACE,CADQ,aACP,IAAD,KADc;SAHlB;CAAA,CAOC,CAAwB,EAAH,GAAtB;CAPA,CAQ6B,EAA5B,EAAD;CAVF,MAFF;CAAA,IAJiB;CAxOnB,EAwOmB;;CAxOnB,CA4P8B,CAAZ,MAAC,OAAnB;CACE;CAAA,IAAc,CAAX,MAAH;CACE,EAAO,CAAP;CACA,GAAuC,EAAvC;CAAA,CAAgB,EAAf,IAAD;OAFF;IAGQ,CAAU,CAHlB;CAIE,CAA2B,EAA1B,EAAD;AACU,CAAJ,KALR;CAME,GAAC,EAAD;KAPc;CA5PlB,EA4PkB;;CA5PlB,CA2QuB,CAAP,MAAC,KAAjB;CACW,CAA2B,EAApC,IAAQ,GAAR;CA5QF,EA2QgB;;CA3QhB,EA+QkB,MAAC,OAAnB;CACW,CAA6B,EAAtC,IAAQ,GAAR;CAhRF,EA+QkB;;CA/QlB,EAmRsB,iBAAtB;CACW,MAAT,CAAQ,GAAR;CAAkB,CAAM,EAAN;CAAA,CAAmC,EAAnC,EAA2B;CADzB,CACwC,EAA5D;CApRF,EAmRsB;;CAnRtB,CA0RgB,CAAP,IAAT,EAAU;CAER;CAAA,EAAW,CAAX;CAAA,EACS,CAAT,UADA;CAGA;CAEE,GAAC,EAAD;CAAA,GACA,IAAQ;CADR,EAEe,CAAR,EAAP;CAJF,YAKE;IACM,EANR;CAQS,YAAP;KAbK;CA1RT,EA0RS;;CA1RT,EA0Se,MAAC,CAAD,GAAf;CACE;AAAc,CAAd;CAAA;KAAA;CAAA,EACW,CAAX;CADA,EAES,CAAT,UAFA;AAIG,CAAH,IAAwB,CAArB,EAAH,EAAG;CAED,EAAO,CAAP;CAAA,EACO,CAAP;MAHF;CAME,EAAO,CAAP;AACA;sCAAA;CAAwC,IAAa,IAAb;;SACtC;CAAA,EAAO,CAAP;CACA,aAFF;CAAA,MAPF;KAJA;AAgBA;CAAA;KAhBA;CAAA,GAmBA;CAnBA,CAsBgC,CAAxB,CAAR,GAAQ;AACgC,CAAxC,IAA4B;CAA5B,CAAuB,GAAvB,GAAQ;KAvBR;AAwBA,IAAc,EAAd;CAnUF,EA0Se;;CA1Sf,EA0UiB,YAAjB;CACE;CAAA,EAAU,CAAV,CAAO,IACL,CADK;CAGL,CAAQ,EAAiB,CAAxB,IAAO;CAAR,CAA8C,EAAC,EAAT,IAAmB;CAH3D,EAKE,GALK;CAAP,EAOS,CAAT,CAAS,CAAT,IAPA;CAQA;AAGK,CAAH,GAAG,CAA0B,CAA7B,EAAG;CACD,EAAc,CAAV,EAAJ;OAJJ;KARA;CADe,UAef;CAzVF,EA0UiB;;CA1UjB,EA4VqB,gBAArB;CAYE,GAAU;CAxWZ,EA4VqB;;CA5VrB,EA4WQ,GAAR,GAAQ;CAIN;CAAA;CAAA,YAAO;KAAP;CAAA,EAEe,CAAf,eAAe;AAEZ,CAAH,IAA0B,CAAvB,IAAH,EAAG;CAED,EAAO,CAAP,QAAO,GAAa;CAGpB,GAAG,EAAH;CACE,EAAK,KAAL,KAAK;CAAL,CACE,CAAa,CADf,IACA;CAEA,CAAK,CAAmB,CAArB,IAAH;CACE,EACgB,CADN,4CAAM;SAJlB;CAAA,GAQC,IAAD;CARA,CAUc,EAAb,IAAD;MAXF;CAaE,CAAQ,CAAW,CAAC,GAApB;OAlBJ;KAJA;CAJM,UA6BN;CAzYF,EA4WQ;;CA5WR,EA4YQ,GAAR,GAAQ;CAEN;CAAA,CAAgC,EAAC,EAAjC,EAAQ,KAAR;KAAA;AAGsB,CAAtB,CAAsB,EAAtB,IAA8B,CAA3B;CACD;CAEC,MAAD;KARI;CA5YR,EA4YQ;;CA5YR,EAyZU,EAzZV,GAyZA;;CAzZA,EA2ZS,IAAT,EAAS;CACP;CAAA;CAAA;KAAA;CAAA,GAGA;CAGA;CAAA;yBAAA;CAAA,MAAO;CAAP,IANA;CAAA,GASA;CATA,EAYA;CAGA;CAEE,GAAC,EAAD;CAAA,GACC,EAAD;CADA,GAGC,EAAD;MALF;CASE,GAAC,EAAD;KAxBF;CAAA,CA6BQ,CADK,CAAb,CAAa,KAAb,EAAa;AAMb;4BAAA;AAAA,IAAY,EAAZ;CAAA,IAlCA;CAAA,EAqCY,CAAZ;CAGO,EAAP,GAAM;CApcR,EA2ZS;;CA3ZT,EAscqB,gBAArB;CACG,UAAD;CAvcF,EAscqB;;CAtcrB;;CAFkC,OAAQ","file":"public/javascripts/app.js","sourcesContent":["GameController = require 'controllers/game_controller'\nmediator       = require 'lib/mediator'\n\n# The application bootstrapper.\nApplication =\n  initialize: ->\n    @gameController = new GameController()\n\n    # Freeze the object\n    Object.freeze? this\n\nmodule.exports = Application\n","MapView       = require 'views/map_view'\nmediator      = require 'lib/mediator'\nEventBroker   = require 'lib/event_broker'\nPlayer        = require 'models/player'\nAvatar        = require 'views/avatar'\nDrawingCanvas = require 'views/drawing_canvas'\nSnowDrawer    = require 'models/snow_drawer'\nutils         = require 'lib/utils'\n\nmodule.exports = class GameController\n  Backbone.utils.extend @prototype, EventBroker\n  constructor: ->\n    @setupMap()\n    @setupCanvas()\n    @addPlayer()\n\n  setupMap: ->\n    @mapView = new MapView\n      className: 'map'\n      el: document.getElementById(\"map\")\n      autoRender: true\n\n  setupCanvas: ->\n    @canvas = new DrawingCanvas\n      el: document.getElementById('drawCanvas')\n      autoRender: true\n\n  addPlayer: ->\n    player = new Player\n      id: 1\n      name: \"Ross\"\n      x_position: 400\n      y_position: 400\n    avatar = new Avatar\n      model: player\n\n    avatar.snowDrawer = new SnowDrawer\n      player: player\n      avatar: avatar\n      canvas: @canvas\n\n    @mapView.listenTo avatar, 'playerMove', @mapView.checkPlayerPosition\n\n    @mapView.spawnPlayer(player, avatar)","application = require 'application'\n\ndocument.addEventListener \"DOMContentLoaded\", ->\n  application.initialize()","# Taken from Chaplin - https://github.com/chaplinjs/chaplin/blob/master/src/chaplin/lib/event_broker.coffee\n\n'use strict'\n\nmediator = require 'lib/mediator'\n\n# Add functionality to subscribe and publish to global\n# Publish/Subscribe events so they can be removed afterwards\n# when disposing the object.\n#\n# Mixin this object to add the subscriber capability to any object:\n# _.extend object, EventBroker\n# Or to a prototype of a class:\n# _.extend @prototype, EventBroker\n#\n# Since Backbone 0.9.2 this abstraction just serves the purpose\n# that a handler cannot be registered twice for the same event.\n\nEventBroker =\n  subscribeEvent: (type, handler) ->\n    if typeof type isnt 'string'\n      throw new TypeError 'EventBroker#subscribeEvent: ' +\n        'type argument must be a string'\n    if typeof handler isnt 'function'\n      throw new TypeError 'EventBroker#subscribeEvent: ' +\n        'handler argument must be a function'\n\n    # Ensure that a handler isn’t registered twice.\n    mediator.unsubscribe type, handler, this\n\n    # Register global handler, force context to the subscriber.\n    mediator.subscribe type, handler, this\n\n  subscribeEventOnce: (type, handler) ->\n    if typeof type isnt 'string'\n      throw new TypeError 'EventBroker#subscribeEventOnce: ' +\n        'type argument must be a string'\n    if typeof handler isnt 'function'\n      throw new TypeError 'EventBroker#subscribeEventOnce: ' +\n        'handler argument must be a function'\n\n    # Ensure that a handler isn’t registered twice.\n    mediator.unsubscribe type, handler, this\n\n    # Register global handler, force context to the subscriber.\n    mediator.subscribeOnce type, handler, this\n\n  unsubscribeEvent: (type, handler) ->\n    if typeof type isnt 'string'\n      throw new TypeError 'EventBroker#unsubscribeEvent: ' +\n        'type argument must be a string'\n    if typeof handler isnt 'function'\n      throw new TypeError 'EventBroker#unsubscribeEvent: ' +\n        'handler argument must be a function'\n\n    # Remove global handler.\n    mediator.unsubscribe type, handler\n\n  # Unbind all global handlers.\n  unsubscribeAllEvents: ->\n    # Remove all handlers with a context of this subscriber.\n    mediator.unsubscribe null, null, this\n\n  publishEvent: (type, args...) ->\n    if typeof type isnt 'string'\n      throw new TypeError 'EventBroker#publishEvent: ' +\n        'type argument must be a string'\n\n    # Publish global handler.\n    mediator.publish type, args...\n\n# You’re frozen when your heart’s not open.\nObject.freeze? EventBroker\n\n# Return our creation.\nmodule.exports = EventBroker","'use strict'\n\n# Mediator\n# --------\n\n# The mediator is a simple object all other modules use to communicate\n# with each other. It implements the Publish/Subscribe pattern.\n#\n# Additionally, it holds objects which need to be shared between modules.\n# In this case, a `user` property is created for getting the user object\n# and a `setUser` method for setting the user.\n#\n# This module returns the singleton object. This is the\n# application-wide mediator you might load into modules\n# which need to talk to other modules using Publish/Subscribe.\n\n\n# Start with a simple object\nmediator = {}\n\n# Publish / Subscribe\n# -------------------\n\n# Mixin event methods from Backbone.Events,\n# create Publish/Subscribe aliases.\nmediator.subscribe     = mediator.on      = Backbone.Events.on\nmediator.subscribeOnce = mediator.once    = Backbone.Events.once\nmediator.unsubscribe   = mediator.off     = Backbone.Events.off\nmediator.publish       = mediator.trigger = Backbone.Events.trigger\n\n# Initialize an empty callback list so we might seal the mediator later.\nmediator._callbacks = null\n\n# Request / Response\n# --–---------------\n\n# Like pub / sub, but with one handler. Similar to OOP message passing.\n\nhandlers = mediator._handlers = {}\n\n# Sets a handler function for requests.\nmediator.setHandler = (name, method, instance) ->\n  handlers[name] = {instance, method}\n\n# Retrieves a handler function and executes it.\nmediator.execute = (nameOrObj, args...) ->\n  silent = false\n  if typeof nameOrObj is 'object'\n    silent = nameOrObj.silent\n    name = nameOrObj.name\n  else\n    name = nameOrObj\n  handler = handlers[name]\n  if handler\n    handler.method.apply handler.instance, args\n  else if not silent\n    throw new Error \"mediator.execute: #{name} handler is not defined\"\n\n# Removes handlers from storage.\n# Can take no args, list of handler names or instance which had bound handlers.\nmediator.removeHandlers = (instanceOrNames) ->\n  unless instanceOrNames\n    mediator._handlers = {}\n\n  if Array.isArray instanceOrNames\n    for name in instanceOrNames\n      delete handlers[name]\n  else\n    for name, handler of handlers when handler.instance is instanceOrNames\n      delete handlers[name]\n  return\n\n# Sealing the mediator\n# --------------------\n\n# After adding all needed properties, you should seal the mediator\n# using this method.\nmediator.seal = ->\n  # Prevent extensions and make all properties non-configurable.\n  if support.propertyDescriptors and Object.seal\n    Object.seal mediator\n\n# Make the method readonly.\n# utils.readonly mediator, 'seal'\n\n# Return our creation.\nmodule.exports = mediator","utils = \n\n  getAllPropertyVersions: (object, property) ->\n    result = []\n    for proto in utils.getPrototypeChain object\n      value = proto[property]\n      if value and value not in result\n        result.push value\n    result\n\n  # Simple duck-typing serializer for models and collections.\n  serialize: (data) ->\n    if typeof data.serialize is 'function'\n      data.serialize()\n    else if typeof data.toJSON is 'function'\n      data.toJSON()\n    else\n      throw new TypeError 'utils.serialize: Unknown data was passed'\n\n  # Get the whole chain of object prototypes.\n  getPrototypeChain: (object) ->\n    chain = [object.constructor.prototype]\n    while object = object.constructor?.superclass?.prototype ? object.constructor?.__super__\n      chain.push object\n    chain.reverse()\n\nmodule.exports = utils","# Base class for all collections.\nmodule.exports = class Collection\n","EventBroker = require 'lib/event_broker'\n\n# Base class for all models.\nmodule.exports = class Model extends Backbone.Model\n  Backbone.utils.extend @prototype, EventBroker","Model = require 'models/model'\n\nmodule.exports = class Player extends Model\n  defaults:\n    x_position: 0\n    y_position: 0\n\n  position: ->\n    return \"#{@get('x_position')}px, #{@get('y_position')}px\"","Model = require 'models/model'\n\nmodule.exports = class SnowDrawer extends Model\n  initialize: (options) ->\n    super\n    @canvas = options.canvas\n    @player = options.player\n    @avatar = options.avatar\n    @canvas.listenTo @avatar, 'playerMove', @canvas.draw","View = require './view'\n\nleft  = 37\nup    = 38\nright = 39\ndown  = 40\n\ndirectionsByName = \n  left: left\n  up: up\n  right: right\n  down: down\n\ndirectionsByCode = \n  37: \"left\"\n  38: \"up\"\n  39: \"right\"\n  40: \"down\"\n\nmodule.exports = class Avatar extends View\n  template: require './templates/avatar'\n  autoRender: false\n  className: 'avatar'\n  movementInc: 10\n  movementLoopInc: 30\n  moving: false\n  activeMovementKeys: []\n  movementKeys: [left, up, right, down]\n  availableDirections:\n    left: true\n    right: true\n    up: true\n    down: true\n\n  initialize: ->\n    super\n    @listenTo @model, \"change:x_position change:y_position\", @broadCastMove\n\n  render: ->\n    super\n    @positionOnMap()\n    @bindEvents()\n    @setDimensions()\n\n  bindEvents: ->\n    document.addEventListener 'keydown', (e) =>\n      @handleKeyDown(e) if @isMovementKey(e)\n    document.addEventListener 'keyup', (e) =>\n      @stopMovement(e)\n\n  broadCastMove: (player) ->\n    @trigger('playerMove', player, @)\n\n  handleKeyDown: (e) ->\n    e.stopPropagation()\n\n    if @isMovementKey(e) and @activeMovementKeys.indexOf(e.keyCode) < 0\n      @activeMovementKeys.push e.keyCode\n\n      unless @moving or @movementLoop\n        @clearMovementClasses()\n        @movementLoop = setInterval =>\n          @move()\n        , @movementLoopInc\n\n\n  move: (keys) ->\n\n    @moving = true\n\n    @checkCollision()\n    if !@isMovingDirection(up) and \n      !@isMovingDirection(down) and \n      !@isMovingDirection(left) and \n      !@isMovingDirection(right)\n        @moving = false\n        @stopMovementLoop()\n\n\n    if @isMovingDirection(up)\n      @model.set('y_position', @model.get('y_position') + -@movementInc)\n    if @isMovingDirection(down)\n      @model.set('y_position', @model.get('y_position') + @movementInc)\n    if @isMovingDirection(left)\n      @model.set('x_position', @model.get('x_position') + -@movementInc)\n    if @isMovingDirection(right)\n      @model.set('x_position', @model.get('x_position') + @movementInc)\n\n    @setMovementClasses()\n\n    @positionOnMap()\n\n  positionOnMap: ->\n    @position_x = @model.get('x_position')\n    @position_y = @model.get('y_position')\n    @el.style.webkitTransform = \"translate3d(#{@model.position()}, 0)\"\n\n  stopMovement: (e) ->\n    if e and e.keyCode\n      if @activeMovementKeys.indexOf(e.keyCode) > -1\n        @stopMovementDirection(e.keyCode)\n\n      if @activeMovementKeys.length is 0\n        @stopMovementLoop()\n        @moving = false\n      \n      @el.classList.remove directionsByCode[e.keyCode] if @moving\n    else\n      @stopMovementLoop()\n      @activeMovementKeys = []\n      @moving = false\n\n    @setMovementClasses()\n\n  isMovementKey: (e) ->\n    return @movementKeys.indexOf(e.keyCode) > -1\n\n  isMovingDirection: (keyCode) ->\n    @activeMovementKeys.indexOf(keyCode) > -1\n\n  setMovementClasses: ->\n    classList = @el.classList\n    if @moving\n      classList.add 'moving'\n    else\n      classList.remove 'moving'\n\n    if @isMovingDirection(up)\n      classList.add 'up'\n      classList.remove 'down'\n    if @isMovingDirection(down)\n      classList.add 'down'\n      classList.remove 'up'\n    if @isMovingDirection(left)\n      classList.add 'left'\n      classList.remove 'right'\n    if @isMovingDirection(right)\n      classList.add 'right'\n      classList.remove 'left'\n\n  clearMovementClasses: ->\n    classList = @el.classList\n    classList.remove('up')\n    classList.remove('down')\n    classList.remove('left')\n    classList.remove('right')\n\n  stopMovementLoop: ->\n    clearInterval(@movementLoop)\n    @movementLoop = null\n\n  stopMovementDirection: (keyCode) ->\n    @activeMovementKeys.splice(@activeMovementKeys.indexOf(keyCode), 1)\n\n  setDimensions: ->\n    setTimeout(=>\n      avatar_rect = @el.getClientRects()[0]\n      @width = avatar_rect.right - avatar_rect.left\n      @height = avatar_rect.bottom - avatar_rect.top\n    , 0)\n\n  checkCollision: ->\n    blocked_up    = @isMovingDirection(up) and !@availableDirections.up\n    blocked_down  = @isMovingDirection(down) and !@availableDirections.down\n    blocked_left  = @isMovingDirection(left) and !@availableDirections.left\n    blocked_right = @isMovingDirection(right) and !@availableDirections.right\n\n    @stopMovementDirection(up) if blocked_up\n    @stopMovementDirection(down) if blocked_down\n    @stopMovementDirection(left) if blocked_left\n    @stopMovementDirection(right) if blocked_right","View = require './view'\n\nmodule.exports = class DrawingCanvas extends View\n  color: 'yellowgreen'\n  initialize: ->\n    super\n    @plots = []\n\n  render: ->\n    super\n    @ctx = @el.getContext('2d')\n    @ctx.strokeStyle = 'yellowgreen'\n    @ctx.lineWidth = '3'\n    @ctx.lineCap = 'round'\n    @ctx.lineJoin = 'round'\n\n    @plots = []\n\n  draw: (player, avatar) ->\n    # return unless @isActive\n    \n    x = player.get('x_position')\n    y = player.get('y_position')\n    @plots.push\n      x: x\n      y: y\n\n    @drawOnCanvas @plots\n\n  drawOnCanvas: ->\n    @ctx.beginPath()\n    @ctx.moveTo @plots[0].x, @plots[0].y\n    i = 1\n    for plot, i in @plots\n      @ctx.lineTo plot.x, plot.y\n    @ctx.stroke()\n\n  endDraw: (e) ->\n    @plots = []","View = require './view'\ntemplate = require './templates/map'\n\nmodule.exports = class MapView extends View\n  template: template\n  className: \"map\"\n  viewport_padding: 100\n  offset_x: 0\n  offset_y: 0\n  height: 5000\n  width: 5000\n\n  render: ->\n    super\n    @setDimensions()\n\n  setDimensions: ->\n    @rect = document.body.getClientRects()[0]\n    @viewport = \n      left:   @rect.left + @viewport_padding\n      top:    @rect.top + @viewport_padding\n      right:  @rect.right - @viewport_padding\n      bottom: @rect.bottom - @viewport_padding\n\n  spawnPlayer: (player, avatar) ->\n    avatar.container = @el\n    avatar.render()\n\n  checkPlayerPosition: (player, avatar) ->\n    px = player.get('x_position')\n    py = player.get('y_position')\n\n    if @canMoveTo(px, py, avatar)\n      avatar.collision = false\n\n    within_x = px > @viewport.left and px < @viewport.right\n    within_y = py > @viewport.top and py < @viewport.bottom\n    within_rect = within_x and within_y\n\n    pan_right = px > ((@viewport.right - @offset_x) - avatar.width)\n    pan_left  = px < (@viewport.left - @offset_x)\n    pan_down  = py > ((@viewport.bottom - @offset_y) - avatar.height)\n    pan_up    = py < (@viewport.top - @offset_y)\n\n    new_x = @offset_x\n    new_y = @offset_y\n\n    if pan_left\n      new_x = @rect.left + (@viewport.left - px)\n    if pan_right\n      new_x = @rect.left + ((@viewport.right - avatar.width) - px)\n    if pan_up\n      new_y = @rect.top + (@viewport.top - py)\n    if pan_down\n      new_y = @rect.top + ((@viewport.bottom - avatar.height) - py)\n\n    # Don't pan if it will reveal beyond the edge of the map\n    unless (new_x + @offset_x) >= 0\n      @offset_x = new_x\n    unless (new_y + @offset_y) >= 0\n      @offset_y = new_y\n\n    @repositionMap(@offset_x, @offset_y)\n\n\n  repositionMap: (left, top) ->\n    @el.style.webkitTransform = \"translate3d(#{left}px, #{top}px, 0)\"\n\n  canMoveTo: (x,y, avatar) ->\n    can_right = x < @width\n    can_left  = x > 0\n    can_up    = y > 0\n    can_down  = y < @width\n\n    avatar.availableDirections =\n      right: can_right\n      left: can_left\n      up: can_up\n      down: can_down\n\n    return can_left and can_right and can_up and can_down","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\n\nbuf.push(\"<h1>Avatar</h1>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\n\nbuf.push(\"<div id=\\\"content\\\"><canvas id=\\\"drawCanvas\\\" width=\\\"5000\\\" height=\\\"5000\\\"></canvas><h1>Map</h1></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","utils       = require 'lib/utils'\nEventBroker = require 'lib/event_broker'\n\n# Shortcut to access the DOM manipulation library.\n$ = Backbone.$\n\n# Function bind shortcut.\nbind = do ->\n  if Function::bind\n    (item, ctx) -> item.bind ctx\n  else if _.bind\n    _.bind\n\nsetHTML = do ->\n  if $\n    (elem, html) -> elem.html html\n  else\n    (elem, html) -> elem.innerHTML = html\n\nattach = do ->\n  if $\n    (view) ->\n      actual = $(view.container)\n      if typeof view.containerMethod is 'function'\n        view.containerMethod actual, view.el\n      else\n        actual[view.containerMethod] view.el\n  else\n    (view) ->\n      actual = if typeof view.container is 'string'\n        document.querySelector view.container\n      else\n        view.container\n\n      if typeof view.containerMethod is 'function'\n        view.containerMethod actual, view.el\n      else\n        actual[view.containerMethod] view.el\n\nmodule.exports = class View extends Backbone.NativeView\n  # Mixin an EventBroker.\n  Backbone.utils.extend @prototype, EventBroker\n\n  # Automatic rendering\n  # -------------------\n\n  # Flag whether to render the view automatically on initialization.\n  # As an alternative you might pass a `render` option to the constructor.\n  autoRender: false\n\n  # Flag whether to attach the view automatically on render.\n  autoAttach: true\n\n  # Automatic inserting into DOM\n  # ----------------------------\n\n  # View container element.\n  # Set this property in a derived class to specify the container element.\n  # Normally this is a selector string but it might also be an element or\n  # jQuery object.\n  # The view is automatically inserted into the container when it’s rendered.\n  # As an alternative you might pass a `container` option to the constructor.\n  container: null\n\n  # Method which is used for adding the view to the DOM\n  # Like jQuery’s `html`, `prepend`, `append`, `after`, `before` etc.\n  containerMethod: if $ then 'append' else 'appendChild'\n\n  # Regions\n  # -------\n\n  # Region registration; regions are in essence named selectors that aim\n  # to decouple the view from its parent.\n  #\n  # This functions close to the declarative events hash; use as follows:\n  # regions:\n  #   'region1': '.class'\n  #   'region2': '#id'\n  regions: null\n\n  # Region application is the reverse; you're specifying that this view\n  # will be inserted into the DOM at the named region. Error thrown if\n  # the region is unregistered at the time of initialization.\n  # Set the region name on your derived class or pass it into the\n  # constructor in controller action.\n  region: null\n\n  # A view is `stale` when it has been previously composed by the last\n  # route but has not yet been composed by the current route.\n  stale: false\n\n  # Flag whether to wrap a view with the `tagName` element when\n  # rendering into a region.\n  noWrap: false\n\n  # Specifies if current element should be kept in DOM after disposal.\n  keepElement: false\n\n  # Subviews\n  # --------\n\n  # List of subviews.\n  subviews: null\n  subviewsByName: null\n\n  # Initialization\n  # --------------\n\n  # List of options that will be picked from constructor.\n  # Easy to extend: `optionNames: View::optionNames.concat ['template']`\n  optionNames: [\n    'autoAttach', 'autoRender',\n    'container', 'containerMethod',\n    'region', 'regions'\n    'noWrap'\n  ]\n\n  constructor: (options) ->\n    # Copy some options to instance properties.\n    if options\n      for optName, optValue of options when optName in @optionNames\n        this[optName] = optValue\n\n    # Wrap `render` so `attach` is called afterwards.\n    # Enclose the original function.\n    render = @render\n    # Create the wrapper method.\n    @render = =>\n      # Stop if the instance was already disposed.\n      return false if @disposed\n      # Call the original method.\n      render.apply this, arguments\n      # Attach to DOM.\n      @attach arguments... if @autoAttach\n      # Return the view.\n      this\n\n    # Initialize subviews collections.\n    @subviews = []\n    @subviewsByName = {}\n\n    if @noWrap\n      if @region\n        region = mediator.execute 'region:find', @region\n        # Set the `this.el` to be the closest relevant container.\n        if region?\n          @el =\n            if region.instance.container?\n              if region.instance.region?\n                $(region.instance.container).find region.selector\n              else\n                region.instance.container\n            else\n              region.instance.$ region.selector\n\n      @el = @container if @container\n\n    # Call Backbone’s constructor.\n    super\n\n    # Set up declarative bindings after `initialize` has been called\n    # so initialize may set model/collection and create or bind methods.\n    @delegateListeners()\n\n    # Listen for disposal of the model or collection.\n    # If the model is disposed, automatically dispose the associated view.\n    @listenTo @model, 'dispose', @dispose if @model\n    if @collection\n      @listenTo @collection, 'dispose', (subject) =>\n        @dispose() if not subject or subject is @collection\n\n    # Register all exposed regions.\n    mediator.execute 'region:register', this if @regions?\n\n    # Render automatically if set by options or instance property.\n    @render() if @autoRender\n\n  # User input event handling\n  # -------------------------\n\n  # Event handling using event delegation\n  # Register a handler for a specific event type\n  # For the whole view:\n  #   delegate(eventName, handler)\n  #   e.g.\n  #   @delegate('click', @clicked)\n  # For an element in the passing a selector:\n  #   delegate(eventName, selector, handler)\n  #   e.g.\n  #   @delegate('click', 'button.confirm', @confirm)\n  delegate: (eventName, second, third) ->\n    if Backbone.utils\n      return Backbone.utils.delegate(this, eventName, second, third)\n    if typeof eventName isnt 'string'\n      throw new TypeError 'View#delegate: first argument must be a string'\n\n    if arguments.length is 2\n      handler = second\n    else if arguments.length is 3\n      selector = second\n      if typeof selector isnt 'string'\n        throw new TypeError 'View#delegate: ' +\n          'second argument must be a string'\n      handler = third\n    else\n      throw new TypeError 'View#delegate: ' +\n        'only two or three arguments are allowed'\n\n    if typeof handler isnt 'function'\n      throw new TypeError 'View#delegate: ' +\n        'handler argument must be function'\n\n    # Add an event namespace, bind handler it to view.\n    list = (\"#{event}.delegate#{@cid}\" for event in eventName.split ' ')\n    events = list.join(' ')\n    bound = bind handler, this\n    @$el.on events, (selector or null), bound\n\n    # Return the bound handler.\n    bound\n\n  # Copy of original Backbone method without `undelegateEvents` call.\n  _delegateEvents: (events) ->\n    if Backbone.View::delegateEvents.length is 2\n      return Backbone.View::delegateEvents.call this, events, true\n    for key, value of events\n      handler = if typeof value is 'function' then value else this[value]\n      throw new Error \"Method '#{value}' does not exist\" unless handler\n      match = key.match /^(\\S+)\\s*(.*)$/\n      eventName = \"#{match[1]}.delegateEvents#{@cid}\"\n      selector = match[2]\n      bound = bind handler, this\n      @$el.on eventName, (selector or null), bound\n    return\n\n  # Override Backbones method to combine the events\n  # of the parent view if it exists.\n  delegateEvents: (events, keepOld) ->\n    @undelegateEvents() unless keepOld\n    return @_delegateEvents events if events\n    # Call _delegateEvents for all superclasses’ `events`.\n    for classEvents in utils.getAllPropertyVersions this, 'events'\n      classEvents = classEvents.call this if typeof classEvents is 'function'\n      @_delegateEvents classEvents\n    return\n\n  # Remove all handlers registered with @delegate.\n  undelegate: (eventName, second, third) ->\n    if Backbone.utils\n      return Backbone.utils.undelegate(this, eventName, second, third)\n    if eventName\n      if typeof eventName isnt 'string'\n        throw new TypeError 'View#undelegate: first argument must be a string'\n\n      if arguments.length is 2\n        if typeof second is 'string'\n          selector = second\n        else\n          handler = second\n      else if arguments.length is 3\n        selector = second\n        if typeof selector isnt 'string'\n          throw new TypeError 'View#undelegate: ' +\n            'second argument must be a string'\n        handler = third\n\n      list = (\"#{event}.delegate#{@cid}\" for event in eventName.split ' ')\n      events = list.join(' ')\n      @$el.off events, (selector or null)\n    else\n      @$el.off \".delegate#{@cid}\"\n\n  # Handle declarative event bindings from `listen`\n  delegateListeners: ->\n    return unless @listen\n\n    # Walk all `listen` hashes in the prototype chain.\n    for version in utils.getAllPropertyVersions this, 'listen'\n      version = version.call this if typeof version is 'function'\n      for key, method of version\n        # Get the method, ensure it is a function.\n        if typeof method isnt 'function'\n          method = this[method]\n        if typeof method isnt 'function'\n          throw new Error 'View#delegateListeners: ' +\n            \"listener for \\\"#{key}\\\" must be function\"\n\n        # Split event name and target.\n        [eventName, target] = key.split ' '\n        @delegateListener eventName, target, method\n\n    return\n\n  delegateListener: (eventName, target, callback) ->\n    if target in ['model', 'collection']\n      prop = this[target]\n      @listenTo prop, eventName, callback if prop\n    else if target is 'mediator'\n      @subscribeEvent eventName, callback\n    else if not target\n      @on eventName, callback, this\n\n    return\n\n  # Region management\n  # -----------------\n\n  # Functionally register a single region.\n  registerRegion: (name, selector) ->\n    mediator.execute 'region:register', this, name, selector\n\n  # Functionally unregister a single region by name.\n  unregisterRegion: (name) ->\n    mediator.execute 'region:unregister', this, name\n\n  # Unregister all regions; called upon view disposal.\n  unregisterAllRegions: ->\n    mediator.execute (name: 'region:unregister', silent: true), this\n\n  # Subviews\n  # --------\n\n  # Getting or adding a subview.\n  subview: (name, view) ->\n    # Initialize subviews collections if they don’t exist yet.\n    subviews = @subviews\n    byName = @subviewsByName\n\n    if name and view\n      # Add the subview, ensure it’s unique.\n      @removeSubview name\n      subviews.push view\n      byName[name] = view\n      view\n    else if name\n      # Get and return the subview by the given name.\n      byName[name]\n\n  # Removing a subview.\n  removeSubview: (nameOrView) ->\n    return unless nameOrView\n    subviews = @subviews\n    byName = @subviewsByName\n\n    if typeof nameOrView is 'string'\n      # Name given, search for a subview by name.\n      name = nameOrView\n      view = byName[name]\n    else\n      # View instance given, search for the corresponding name.\n      view = nameOrView\n      for otherName, otherView of byName when otherView is view\n        name = otherName\n        break\n\n    # Break if no view and name were found.\n    return unless name and view and view.dispose\n\n    # Dispose the view.\n    view.dispose()\n\n    # Remove the subview from the lists.\n    index = utils.indexOf subviews, view\n    subviews.splice index, 1 if index isnt -1\n    delete byName[name]\n\n  # Rendering\n  # ---------\n\n  # Get the model/collection data for the templating function\n  # Uses optimized Chaplin serialization if available.\n  getTemplateData: ->\n    data = if @model\n      utils.serialize @model\n    else if @collection\n      {items: utils.serialize(@collection), length: @collection.length}\n    else\n      {}\n\n    source = @model or @collection\n    if source\n      # If the model/collection is a SyncMachine, add a `synced` flag,\n      # but only if it’s not present yet.\n      if typeof source.isSynced is 'function' and not ('synced' of data)\n        data.synced = source.isSynced()\n\n    data\n\n  # Returns the compiled template function.\n  getTemplateFunction: ->\n    # Chaplin doesn’t define how you load and compile templates in order to\n    # render views. The example application uses Handlebars and RequireJS\n    # to load and compile templates on the client side. See the derived\n    # View class in the\n    # [example application](https://github.com/chaplinjs/facebook-example).\n    #\n    # If you precompile templates to JavaScript functions on the server,\n    # you might just return a reference to that function.\n    # Several precompilers create a global `JST` hash which stores the\n    # template functions. You can get the function by the template name:\n    # JST[@templateName]\n    throw new Error 'View#getTemplateFunction must be overridden'\n\n  # Main render function.\n  # This method is bound to the instance in the constructor (see above)\n  render: ->\n    # Do not render if the object was disposed\n    # (render might be called as an event handler which wasn’t\n    # removed correctly).\n    return false if @disposed\n\n    templateFunc = @getTemplateFunction()\n\n    if typeof templateFunc is 'function'\n      # Call the template function passing the template data.\n      html = templateFunc @getTemplateData()\n\n      # Replace HTML\n      if @noWrap\n        el = document.createElement 'div'\n        el.innerHTML = html\n\n        if el.children.length > 1\n          throw new Error 'There must be a single top-level element when ' +\n                          'using `noWrap`.'\n\n        # Undelegate the container events that were setup.\n        @undelegateEvents()\n        # Delegate events to the top-level container in the template.\n        @setElement el.firstChild, true\n      else\n        setHTML (if $ then @$el else @el), html\n\n    # Return the view.\n    this\n\n  # This method is called after a specific `render` of a derived class.\n  attach: ->\n    # Attempt to bind this view to its named region.\n    mediator.execute 'region:show', @region, this if @region?\n\n    # Automatically append to DOM if the container element is set.\n    if @container and not document.body.contains @el\n      attach this\n      # Trigger an event.\n      @trigger 'addedToDOM'\n\n  # Disposal\n  # --------\n\n  disposed: false\n\n  dispose: ->\n    return if @disposed\n\n    # Unregister all regions.\n    @unregisterAllRegions()\n\n    # Dispose subviews.\n    subview.dispose() for subview in @subviews\n\n    # Unbind handlers of global events.\n    @unsubscribeAllEvents()\n\n    # Remove all event handlers on this module.\n    @off()\n\n    # Check if view should be removed from DOM.\n    if @keepElement\n      # Unsubscribe from all DOM events.\n      @undelegateEvents()\n      @undelegate()\n      # Unbind all referenced handlers.\n      @stopListening()\n    else\n      # Remove the topmost element from DOM. This also removes all event\n      # handlers from the element and all its children.\n      @remove()\n\n    # Remove element references, options,\n    # model/collection references and subview lists.\n    properties = [\n      'el', '$el',\n      'options', 'model', 'collection',\n      'subviews', 'subviewsByName',\n      '_callbacks'\n    ]\n    delete this[prop] for prop in properties\n\n    # Finished.\n    @disposed = true\n\n    # You’re frozen when your heart’s not open.\n    Object.freeze? this\n\n  getTemplateFunction: ->\n    @template\n"]}